#+TITLE: IPFS keystore
#+PROPERTY: header-args:sh :session *shell ipfs-keystore sh* :results silent raw
#+PROPERTY: header-args:python :session *shell ipfs-keystore python* :results silent raw

** Protobuf preparation

#+BEGIN_SRC proto :tangle pb/crypto.proto
syntax = "proto2";

package crypto.pb;

enum KeyType {
	RSA = 0;
	Ed25519 = 1;
	Secp256k1 = 2;
	ECDSA = 3;
}

message PublicKey {
	required KeyType Type = 1;
	required bytes Data = 2;
}

message PrivateKey {
	required KeyType Type = 1;
	required bytes Data = 2;
}
#+END_SRC

#+BEGIN_SRC sh
protoc -I ./pb --python_out=./pb ./pb/crypto.proto
#+END_SRC

** Imports

#+BEGIN_SRC python
import base64

from pb import crypto_pb2
#+END_SRC

** Message type

Private key.

#+BEGIN_SRC python
MSGTYPE = crypto_pb2.PrivateKey
#+END_SRC

(or) Public key.

#+BEGIN_SRC python
MSGTYPE = crypto_pb2.PublicKey
#+END_SRC

** Keyfile name

File name in keystore is base32 encoded name.

#+BEGIN_SRC python
def keyname_to_filename(name):
    enc = base64.b32encode(bytes(name.encode("utf8")))
    return (b"key_" + enc.lower().replace(b'=', b'')).decode("utf8")

def filename_to_keyname(fn):
    enc = fn.replace("key_", "").upper()
    enc += '=' * (8 - (len(enc) % 8))
    return base64.b32decode(enc).decode("utf8")
#+END_SRC

Ed25519 example key.

#+BEGIN_SRC python :results replace code
fn = "key_mvsdenjvge4q"
keyname = filename_to_keyname(fn)
keyname
#+END_SRC

#+RESULTS:
#+begin_src python
ed25519
#+end_src

(or) RSA example key.

#+BEGIN_SRC python :results replace code
fn = "key_ojzwc"
keyname = filename_to_keyname(fn)
keyname
#+END_SRC

#+RESULTS:
#+begin_src python
rsa
#+end_src

#+BEGIN_SRC python :results replace code
keyname = "myed25519"
fn = keyname_to_filename(keyname)
fn
#+END_SRC

#+RESULTS:
#+begin_src python
key_nv4wkzbsgu2tcoi
#+end_src

#+BEGIN_SRC python :results replace code
keyname = "myrsa"
fn = keyname_to_filename(keyname)
fn
#+END_SRC

#+RESULTS:
#+begin_src python
key_nv4xe43b
#+end_src

** Read keyfile data

Load key.

#+BEGIN_SRC python :results replace code
f = open("data/" + fn, "rb")
serialized = f.read()
f.close()
serialized.hex()
#+END_SRC

#+RESULTS:
#+begin_src python
080112405d6b9774c1fe2a3ccdf8d84b4dab3ca4327bc462b7845a353b97c8cd8aa2e845f28ec61f09d7c64b74c0a31655dd83b8771f583c5e54a4661bbbbac8fdd554e9
#+end_src

(or) Initialise serialized key from variable.

#+BEGIN_SRC python
serialized_hex = "080112405d6b9774c1fe2a3ccdf8d84b4dab3ca4327bc462b7845a353b97c8cd8aa2e845f28ec61f09d7c64b74c0a31655dd83b8771f583c5e54a4661bbbbac8fdd554e9"
serialized = bytes.fromhex(serialzed_hex)
#+END_SRC

** Unmarshall key

#+BEGIN_SRC python :results replace code
msg = MSGTYPE()
msg.ParseFromString(data)
(msg.Type, len(msg.Data), msg.Data.hex())
#+END_SRC

#+RESULTS:
#+begin_src python
(1, 64, '5d6b9774c1fe2a3ccdf8d84b4dab3ca4327bc462b7845a353b97c8cd8aa2e845f28ec61f09d7c64b74c0a31655dd83b8771f583c5e54a4661bbbbac8fdd554e9')
#+end_src

** Marshall key

Ed25519 example key.

#+BEGIN_SRC python
keytype = 1
key_hex = "5d6b9774c1fe2a3ccdf8d84b4dab3ca4327bc462b7845a353b97c8cd8aa2e845f28ec61f09d7c64b74c0a31655dd83b8771f583c5e54a4661bbbbac8fdd554e9"
key = bytes.fromhex(key_hex)
#+END_SRC

(or) RSA example key.

#+BEGIN_SRC python
keytype = 0
key_hex = "308204a30201000282010100bbd8d3321be44ff92fac450bfb4b03351314bbda60b12382f1d232a78d2be4d05d35efeb1d305775a303cf6b7fe838afa60afb072395845f9b899eb0e0063967d4053e07cc3420f15b7f46078e38a2eae39d1698c4c3cf36cf69138431ac89aab95018d49f75e20902b3cfeececce77de5ef448af08f14d0bcb06662e94a7cb8bcd8a4048b6e92d25c887704155e121f435e7b16d036df60e6e3b1ec9632f0be7c0fae2ea11a36000cc78f28513cf50477cac2299780f2a0567aec622b6f5cac6c4acf20da1a8f9763df1dc53a2b17c4981c5b1670f6dc410f3f50d9e04217c6bc0b2ed663021766447bb75514812bf2e5827e097ebf281f070e3da626b0114302030100010282010005f408357556d60602b1c5fa6c3b635da23e2cf9edc88f648dff686590fecc20a2639c37ea53e6e1ae89e75ff3cccb471dcf09479fa4146ee742044a7cbf15c0a9a284e5c05e029143a213f91753ca2e018aaff5a57ec3296c875afbfc8b084de5d39905dc0be35effbbed221761bd106b621add0064b8772913ba1af663caf20df2eeb567e7615fa1477231f27a2cceebef95f36953993e8d4211476ff75347832897401fc6ff9423e28f947dce3be108b735c29b258b21aaed28dd50f8c2b5fed23ef82680f4449ea964cbaa0f9f4421b3a254253c5d54860a0a0f91ccf3e6b4120ccc3abe770e8cfa9bc98b8a8321b830cb1e677f84f43e78cba57effb90902818100eb4a66543dce84d4a45cfdc6654170cca612278850e4108bd9598742d60c80c20dfa3a2642f48c9067d1b764fb61ef6878cad6cbfce52b2bc4e4d9118cab3527036649809815b8f45289d5fe865e9670989eead1aaf92cffe5fd4daf8ff17bc58e6f52162c16566315e0941208ecea559dc421b608cce129bd302b5016ef928f02818100cc616b20c25fae77a93f22ca7c34e04b402da6625686619c2ba9291f2e9d982fe581402d76c86ffb7b36bda068218ffdc97a21209ab69d46b5f7b80c3be80f843c1f1800f45b0586ba504b385c603f4b403a42d0991039ee0abe9c4bbb9af7feb7701f853b654ec0dddac417204762bdc79e664908033b08181154bc0970600d02818100d5401b3aa2c1f875d97a46af77ba3607e54472fc038490d28f6dab40124c46ae9a887e078b8ba59283e5f937d6f6ce4b7b9f2bcaba2ce251cb2436f0c6f3ad3aecc3da3e6898d786e8fff029bd9320fa6ff9288e5b4d77517f1b733b7954be7f313707c8fcb04a1f8806816d4f159ad57a25f6ffcb3e159d04d1119087191f550281801f543795b7f5eeca8cf90e9e3757eba1dd5ea208a4f6c873a605b236037148e8dea7676d10ae3cec31c0fc646051f4be9469d2362b411eeebdea111e5ef87d986996e29912dbf906e3fc76eb56cdb22618dc556da068ea5860f1430820e3ea6bf3368ebe5f9271f6028c0c4ef735ba1f194060b18536e98f9e10da0a50f016e90281804605e8eaa0a4171d0af19fe2e0f6e65db9e6f56264a9d755b6750ebd2f48987d50fa331e88ecdee981063633788d117aaaf09dab543e79304d3ddb74dd282e40036c73e6f98e868836d234a4e427ebbf0379d436aa7ea02451f2c2e11a966a0b0747fef2dd22d4406cbea3d7929602ef2902d94e1c4eb29735ca6bbf281e8d99"
key = bytes.fromhex(key_hex)
#+END_SRC

#+BEGIN_SRC python :results replace code
msg = MSGTYPE()
msg.Type = keytype
msg.Data = key
serialized = msg.SerializeToString()
serialized.hex()
#+END_SRC

#+RESULTS:
#+begin_src python
080112405d6b9774c1fe2a3ccdf8d84b4dab3ca4327bc462b7845a353b97c8cd8aa2e845f28ec61f09d7c64b74c0a31655dd83b8771f583c5e54a4661bbbbac8fdd554e9
#+end_src

** Write keyfile data

#+BEGIN_SRC python :results replace code
f = open("data/"+fn, "wb")
f.write(serialized)
f.close()
fn
#+END_SRC

#+RESULTS:
#+begin_src python
key_ojzwc3lz
#+end_src
